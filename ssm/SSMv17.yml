schemaVersion: "2.2"
description: Install the Armor agent for Windows
parameters:
  LicenseKey:
    type: String
    description: (Required) Armor agent License Key
    default: XXXXX-XXXXX-XXXXX-XXXXX-XXXXX
  Region:
    type: String
    description: (Required) Armor region
    default: us-west-armor
  InstallType:
    type: String
    description: (Required) Specify Armor agent installation type
    allowedValues:
      - AgentOnly
      - Full
    default: Full
mainSteps:
  - action: aws:runShellScript
    precondition:
      StringEquals:
        - platformType
        - Linux
    name: LinuxInstall
    inputs:
      timeoutSeconds: '300'
      runCommand:
        - "#!/bin/bash"
        - set -e
        - ""
        - LicenseKey={{LicenseKey}}
        - Region={{Region}}
        - InstallType={{InstallType}}
        - Uri="https://agent.armor.com/latest/armor_agent.sh"
        - armorScript="/tmp/armor_agent.sh"
        - ""
        - curl -sSL "${Uri}" -o "${armorScript}"
        - ""
        - if [ -f "${armorScript}" ];then
        - '    if [ "${InstallType}" == "AgentOnly" ];then'
        - '        . "${armorScript}" -l "${LicenseKey}" -r "${Region}"'
        - "    else"
        - '        . "${armorScript}" -l "${LicenseKey}" -r "${Region}"'
        - '        . "/opt/armor/armor trend install'
        - '        . "/opt/armor/armor fim on auto-apply-recommendations=on async=true'
        - '        . "/opt/armor/armor ips detect auto-apply-recommendations=on async=true'
        - '        . "/opt/armor/armor av on async=true'
        - '        . "/opt/armor/armor logging install'
        - '        . "/opt/armor/armor vuln install'
        - '        . "/opt/armor/armor trend recommendation-scan async=true'
        - '        . "/opt/armor/armor trend ongoing-recommendation-scan on async=true'
        - "    fi"
        - "    exitCode=$?"
        - else
        - '    echo "Failed to download ${armorScript}"'
        - "    exitCode=2"
        - fi
        - ""
        - exit "${exitCode}"
  - action: aws:runPowerShellScript
    precondition:
      StringEquals:
        - platformType
        - Windows
    name: WindowsInstall
    inputs:
      timeoutSeconds: '900'
      runCommand:
        - $LicenseKey = "{{LicenseKey}}"
        - $Region = "{{Region}}"
        - $InstallType = "{{InstallType}}"
        - ""
        - $uri = "https://agent.armor.com/latest/armor_agent.ps1"
        - ""
        - $installScript = "$ENV:WinDir\Temp\$($uri.Split('/')[-1])"
        - ""
        - "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12"
        - # Uncomment the next two lines to turn on debug mode for armor logging in c:\.armor\log\armor.log
        - #"mkdir c:/.armor/etc/"
        - #"Invoke-WebRequest https://armorscripts.s3.amazonaws.com/WINscripts/armor.cfg -outfile c:/.armor/etc/armor.cfg"
        - ""
        - $webArgs = @{
        - ""
        - "    Uri             = $uri"
        - "    Outfile         = $installScript"
        - "    UseBasicParsing = $True"
        - "    Passthru        = $True"
        - "}"
        - ""
        - "$webReq = Invoke-WebRequest @webArgs"
        - ""
        - if( $webReq.StatusCode -ne 200 )
        - "{"
        - '    throw "Failed to download armor_agent.ps1"'
        - "}"
        - ""
        - switch($InstallType)
        - "{"
        - '    "AgentOnly"'
        - "    {"
        - "        & $installScript -license $LicenseKey -region $Region"
        - "    }"
        - ""
        - '    "Full"'
        - "    {"
        - "        & $installScript -license $LicenseKey -region $Region"
        - "        & c:\\.armor\\opt\\armor.exe trend install"
        - "        & c:\\.armor\\opt\\armor.exe fim on auto-apply-recommendations=on async=true"
        - "        & c:\\.armor\\opt\\armor.exe ips detect auto-apply-recommendations=on async=true"
        - "        & c:\\.armor\\opt\\armor.exe av on async=true"
        - "        & c:\\.armor\\opt\\armor.exe logging install"
        - "        & c:\\.armor\\opt\\armor.exe vuln install"
        - "        & c:\\.armor\\opt\\armor.exe trend ongoing-recommendation-scan on async=true"
        - "        & c:\\.armor\\opt\\armor.exe trend recommendation-scan async=true"
        - "        & c:\\.armor\\opt\\armor.exe trend heartbeat"
        - "    }"
        - "}"
        - Remove-Item -Path "$ENV:WinDir\Temp\armor_agent.ps1" -ErrorAction SilentlyContinue
